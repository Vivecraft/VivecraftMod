architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/vivecraft.accesswidener")
}

dependencies {
    compileOnly project(':stubs')
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"

    modApi("dev.architectury:architectury-fabric:${rootProject.architectury_version}") { exclude group: "net.fabricmc" exclude group: "net.fabricmc.fabric-api" }

    // for sodium compat
    modCompileOnly "maven.modrinth:sodium:mc1.20.4-0.5.8"

    // for iris compat
    modCompileOnly "maven.modrinth:iris:1.7.0+1.20.4"

    // for REI compat
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-fabric:14.0.688") { exclude group: "net.fabricmc" exclude group: "net.fabricmc.fabric-api" exclude group: "dev.architectury" }

    // for Pehkui compat
    modApi("com.github.Virtuoel:Pehkui:3.7.12") { exclude group: "net.fabricmc" exclude group: "net.fabricmc.fabric-api" }

    // other mods
    modCompileOnly "maven.modrinth:dynamic-fps:3.4.1"
    // modCompileOnly("com.simibubi.create:create-fabric-1.19.2:0.5.0.i-969+1.19.2")
    // modCompileOnly "maven.modrinth:lithium:mc1.20.4-0.12.1"
    // modCompileOnly "maven.modrinth:indium:1.0.30+mc1.20.4"
    modCompileOnly "maven.modrinth:resolution-control-plus:3.0.0"
    modCompileOnly "maven.modrinth:better-combat:1.8.3+1.20.1-fabric"

    // for immersive portals compat
    modCompileOnly('com.github.iPortalTeam:ImmersivePortalsMod:v5.1.7-mc1.20.4') { exclude group: "net.fabricmc" exclude group: "net.fabricmc.fabric-api" }

    //for epic fight compat
    modCompileOnly("maven.modrinth:epic-fight:20.6.3")

    // needed dependencies
    compileOnly("com.google.code.findbugs:jsr305:3.0.2")
    compileOnly('com.electronwill.night-config:toml:3.6.6')

    //LaunchPopup
    implementation 'com.github.Vivecraft:LaunchPopup:master-SNAPSHOT'
}
// extract the LaunchPopup classes
jar {
    from {
        configurations
            .runtimeClasspath
            .collect {
                if (it.name.startsWith("LaunchPopup")) {
                    zipTree(it)
                }
            }
    }
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
