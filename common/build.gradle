architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/vivecraft.accesswidener")
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"

    modApi("dev.architectury:architectury-fabric:${rootProject.architectury_version}")

    // for sodium compat
    modCompileOnly "maven.modrinth:sodium:mc1.20.1-0.5.2"
    modCompileOnly "maven.modrinth:sodium:mc1.20-0.4.10"
    modCompileOnly "883067831485366304:1080535317733462076:sodium-fabric-mc1.19.4-pre2-0.4.11rev.9a2a2ea-dirty:jar"
    modCompileOnly("maven.modrinth:rubidium:0.6.4")

    // for iris compat
    modCompileOnly "maven.modrinth:iris:1.6.8+1.20.1"

    // for REI compat
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-fabric:12.0.634"

    // for Pehkui compat
    modApi("com.github.Virtuoel:Pehkui:3.7.7", { exclude group: "net.fabricmc.fabric-api" })

    // other mods
    modCompileOnly "maven.modrinth:dynamic-fps:3.2.0"
    // modCompileOnly("com.simibubi.create:create-fabric-1.19.2:0.5.0.i-969+1.19.2")
    modCompileOnly "maven.modrinth:lithium:mc1.20.1-0.11.2"
    modCompileOnly "maven.modrinth:indium:1.0.21+mc1.20.1"
    modCompileOnly "maven.modrinth:resolution-control-plus:1.20-3.0.0"

    // for immersive portals compat
    modCompileOnly('com.github.iPortalTeam.ImmersivePortalsMod:imm_ptl_core:v3.3.1-mc1.20.1') {
        exclude(group: "net.fabricmc.fabric-api")
        transitive(false)
    }
    modCompileOnly('com.github.iPortalTeam.ImmersivePortalsMod:q_misc_util:v3.3.1-mc1.20.1') {
        exclude(group: "net.fabricmc.fabric-api")
        transitive(false)
    }

    // needed dependencies
    compileOnly("com.google.code.findbugs:jsr305:3.0.2")
    compileOnly('com.electronwill.night-config:toml:3.6.6')

    //LaunchPopup
    implementation 'com.github.fayer3:LaunchPopup:master-SNAPSHOT'

}
// extract the LaunchPopup classes
jar {
    from {
        configurations
            .runtimeClasspath
            .collect {
                if (it.name.startsWith("LaunchPopup")) {
                    zipTree(it)
                }
            }
    }
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
