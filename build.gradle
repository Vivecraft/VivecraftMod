plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.7-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "java"
    apply plugin: "dev.architectury.loom"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.minecraft_version + "-" + rootProject.mod_version
    group = rootProject.maven_group

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.layered() {
            // The following line declares the mojmap mappings, you may use other mappings as well
            officialMojangMappings()
            // The following line declares the yarn mappings you may select this one as well.
            // "net.fabricmc:yarn:1.18.2+build.4:v2"
            // parchment mappings as backup
            parchment("org.parchmentmc.data:parchment-${rootProject.minecraft_version}:${rootProject.parchment_version}@zip")
        }
        implementation("org.lwjgl:lwjgl-openvr:${rootProject.lwjgl_version}")
        implementation("org.lwjgl:lwjgl-openvr:${rootProject.lwjgl_version}:natives-linux")
        implementation("org.lwjgl:lwjgl-openvr:${rootProject.lwjgl_version}:natives-macos")
        implementation("org.lwjgl:lwjgl-openvr:${rootProject.lwjgl_version}:natives-windows")
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }

    processResources {
        if (project.name != "common" && project.name != "stubs") {
            // copy resources except the mixin jsons
            from(project(':common').sourceSets['main'].resources) {
                exclude "vivecraft.*"
            }
        }
    }

    tasks.register('copyJarToMain', Copy) {
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
        if (project.name != "common" && project.name != "stubs") {
            from remapJar
            into "../build/libs"
        }
    }

    remapJar {
        // after remap, copy the final jar to the main /build/libs folder
        finalizedBy copyJarToMain
    }
}

allprojects {
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.

        maven { url 'https://jitpack.io' }
        exclusiveContent {
            forRepository {
                maven {
                    name = "Modrinth"
                    url = "https://api.modrinth.com/maven"
                }
            }
            filter {
                includeGroup "maven.modrinth"
            }
        }

        exclusiveContent {
            forRepository {
                maven {
                    name = "Ladysnake Mods"
                    url = "https://maven.ladysnake.org/releases"
                }
            }
            filter {
                includeGroup 'io.github.ladysnake'
                includeGroup 'org.ladysnake'
                includeGroupByRegex 'dev\\.onyxstudios.*'
            }
        }

        exclusiveContent {
            forRepository {
                maven {
                    name = "fabricmc"
                    url = "https://maven.fabricmc.net/"
                }
            }
            filter {
                includeGroup "net.fabricmc"
                includeGroup "fabric-loom"
            }
        }

        maven {
            name = "neoforge"
            url = "https://maven.neoforged.net/releases/"
        }

        maven { url = "https://hephaestus.dev/release" }
        maven { url = "https://cursemaven.com" }
        maven { url = "https://maven.parchmentmc.org" }
        maven { url = "https://maven.tterrag.com/" }
        maven { url = "https://storage.googleapis.com/devan-maven/" }
        maven { url = "https://maven.shedaniel.me/" }
        maven { url = "https://aperlambda.github.io/maven" }
        maven { url = "https://mvn.devos.one/releases/" }
        maven { url = "https://mvn.devos.one/snapshots/" }
        maven { url = "https://maven.terraformersmc.com/" }
        maven { url = "https://maven.cafeteria.dev/releases/" }
        maven { url = "https://maven.gegy.dev" }
        maven { url = "https://modmaven.dev" }
        maven { url = "https://maven.minecraftforge.net/"}
        exclusiveContent {
            forRepository {
                maven {
                    name = "JamiesWhiteShirt"
                    url = "https://maven.jamieswhiteshirt.com/libs-release"
                }
            }
            filter {
                includeGroup "com.jamieswhiteshirt"
            }
        }

        exclusiveContent {
            forRepository {
                ivy {
                    name = "Discord"
                    url = "https://cdn.discordapp.com/attachments/"
                    patternLayout {
                        artifact '/[organisation]/[module]/[revision].[ext]'
                    }
                    metadataSources { artifact() }
                }
            }
            filter {
                // discords are always just numbers
                includeGroupByRegex "^\\d*\$"
            }
        }
    }
}
